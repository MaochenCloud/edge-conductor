//
//   Copyright (c) 2022 Intel Corporation.
//
//   SPDX-License-Identifier: Apache-2.0
//
//
//

// Code generated by MockGen. DO NOT EDIT.
// Source: ep/pkg/eputils/repoutils (interfaces: RepoUtilsInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepoUtilsInterface is a mock of RepoUtilsInterface interface.
type MockRepoUtilsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoUtilsInterfaceMockRecorder
}

// MockRepoUtilsInterfaceMockRecorder is the mock recorder for MockRepoUtilsInterface.
type MockRepoUtilsInterfaceMockRecorder struct {
	mock *MockRepoUtilsInterface
}

// NewMockRepoUtilsInterface creates a new mock instance.
func NewMockRepoUtilsInterface(ctrl *gomock.Controller) *MockRepoUtilsInterface {
	mock := &MockRepoUtilsInterface{ctrl: ctrl}
	mock.recorder = &MockRepoUtilsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoUtilsInterface) EXPECT() *MockRepoUtilsInterfaceMockRecorder {
	return m.recorder
}

// PullFileFromRepo mocks base method.
func (m *MockRepoUtilsInterface) PullFileFromRepo(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PullFileFromRepo", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PullFileFromRepo indicates an expected call of PullFileFromRepo.
func (mr *MockRepoUtilsInterfaceMockRecorder) PullFileFromRepo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PullFileFromRepo", reflect.TypeOf((*MockRepoUtilsInterface)(nil).PullFileFromRepo), arg0, arg1)
}

// PushFileToRepo mocks base method.
func (m *MockRepoUtilsInterface) PushFileToRepo(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PushFileToRepo", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PushFileToRepo indicates an expected call of PushFileToRepo.
func (mr *MockRepoUtilsInterfaceMockRecorder) PushFileToRepo(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PushFileToRepo", reflect.TypeOf((*MockRepoUtilsInterface)(nil).PushFileToRepo), arg0, arg1, arg2)
}
