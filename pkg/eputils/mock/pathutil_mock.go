//
//   Copyright (c) 2022 Intel Corporation.
//
//   SPDX-License-Identifier: Apache-2.0
//
//
//

// Code generated by MockGen. DO NOT EDIT.
// Source: ep/pkg/eputils (interfaces: PathWrapper)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPathWrapper is a mock of PathWrapper interface.
type MockPathWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockPathWrapperMockRecorder
}

// MockPathWrapperMockRecorder is the mock recorder for MockPathWrapper.
type MockPathWrapperMockRecorder struct {
	mock *MockPathWrapper
}

// NewMockPathWrapper creates a new mock instance.
func NewMockPathWrapper(ctrl *gomock.Controller) *MockPathWrapper {
	mock := &MockPathWrapper{ctrl: ctrl}
	mock.recorder = &MockPathWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPathWrapper) EXPECT() *MockPathWrapperMockRecorder {
	return m.recorder
}

// GetBaseUrl mocks base method.
func (m *MockPathWrapper) GetBaseUrl(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBaseUrl", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBaseUrl indicates an expected call of GetBaseUrl.
func (mr *MockPathWrapperMockRecorder) GetBaseUrl(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBaseUrl", reflect.TypeOf((*MockPathWrapper)(nil).GetBaseUrl), arg0)
}
