// Code generated by go-swagger; DO NOT EDIT.

//
//   Copyright (c) 2022 Intel Corporation.
//
//   SPDX-License-Identifier: Apache-2.0
//
//
//

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Ironicdeployinfo ironicdeployinfo
//
// swagger:model ironicdeployinfo
type Ironicdeployinfo struct {

	// dhcprange
	Dhcprange string `json:"dhcprange,omitempty"`

	// endpoint
	// Pattern: (?:(?:https?|http|ftp|file|oci)://|www.|ftp.)(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[A-Z0-9+&@#/%=~_|$])
	Endpoint string `json:"endpoint,omitempty"`

	// fasttrack
	Fasttrack string `json:"fasttrack,omitempty"`

	// httpport
	// Pattern: ^((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))$
	Httpport string `json:"httpport,omitempty"`

	// inspectorendpoint
	// Pattern: (?:(?:https?|http|ftp|file|oci)://|www.|ftp.)(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[A-Z0-9+&@#/%=~_|$])
	Inspectorendpoint string `json:"inspectorendpoint,omitempty"`

	// kernelurl
	// Pattern: (?:(?:https?|http|ftp|file|oci)://|www.|ftp.)(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[A-Z0-9+&@#/%=~_|$])
	Kernelurl string `json:"kernelurl,omitempty"`

	// provisioninginterface
	Provisioninginterface string `json:"provisioninginterface,omitempty"`

	// provisioningip
	// Pattern: (\b25[0-5]|\b2[0-4][0-9]|\b[01]?[0-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}\b
	Provisioningip string `json:"provisioningip,omitempty"`

	// ramdiskurl
	// Pattern: (?:(?:https?|http|ftp|file|oci)://|www.|ftp.)(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[A-Z0-9+&@#/%=~_|$])
	Ramdiskurl string `json:"ramdiskurl,omitempty"`
}

// Validate validates this ironicdeployinfo
func (m *Ironicdeployinfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndpoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHttpport(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInspectorendpoint(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKernelurl(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProvisioningip(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRamdiskurl(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Ironicdeployinfo) validateEndpoint(formats strfmt.Registry) error {
	if swag.IsZero(m.Endpoint) { // not required
		return nil
	}

	if err := validate.Pattern("endpoint", "body", m.Endpoint, `(?:(?:https?|http|ftp|file|oci)://|www.|ftp.)(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[A-Z0-9+&@#/%=~_|$])`); err != nil {
		return err
	}

	return nil
}

func (m *Ironicdeployinfo) validateHttpport(formats strfmt.Registry) error {
	if swag.IsZero(m.Httpport) { // not required
		return nil
	}

	if err := validate.Pattern("httpport", "body", m.Httpport, `^((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))$`); err != nil {
		return err
	}

	return nil
}

func (m *Ironicdeployinfo) validateInspectorendpoint(formats strfmt.Registry) error {
	if swag.IsZero(m.Inspectorendpoint) { // not required
		return nil
	}

	if err := validate.Pattern("inspectorendpoint", "body", m.Inspectorendpoint, `(?:(?:https?|http|ftp|file|oci)://|www.|ftp.)(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[A-Z0-9+&@#/%=~_|$])`); err != nil {
		return err
	}

	return nil
}

func (m *Ironicdeployinfo) validateKernelurl(formats strfmt.Registry) error {
	if swag.IsZero(m.Kernelurl) { // not required
		return nil
	}

	if err := validate.Pattern("kernelurl", "body", m.Kernelurl, `(?:(?:https?|http|ftp|file|oci)://|www.|ftp.)(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[A-Z0-9+&@#/%=~_|$])`); err != nil {
		return err
	}

	return nil
}

func (m *Ironicdeployinfo) validateProvisioningip(formats strfmt.Registry) error {
	if swag.IsZero(m.Provisioningip) { // not required
		return nil
	}

	if err := validate.Pattern("provisioningip", "body", m.Provisioningip, `(\b25[0-5]|\b2[0-4][0-9]|\b[01]?[0-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}\b`); err != nil {
		return err
	}

	return nil
}

func (m *Ironicdeployinfo) validateRamdiskurl(formats strfmt.Registry) error {
	if swag.IsZero(m.Ramdiskurl) { // not required
		return nil
	}

	if err := validate.Pattern("ramdiskurl", "body", m.Ramdiskurl, `(?:(?:https?|http|ftp|file|oci)://|www.|ftp.)(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:([-A-Z0-9+&@#/%=~_|$?!:,.]*)|[A-Z0-9+&@#/%=~_|$])`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this ironicdeployinfo based on context it is used
func (m *Ironicdeployinfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Ironicdeployinfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Ironicdeployinfo) UnmarshalBinary(b []byte) error {
	var res Ironicdeployinfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
