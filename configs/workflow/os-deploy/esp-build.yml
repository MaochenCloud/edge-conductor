#
# Copyright (c) 2022 Intel Corporation.
#
# SPDX-License-Identifier: Apache-2.0
#
containers:
- name: esp-build
  image: docker/compose:debian-1.29.2
  userInContainer: auto
  runInBackground: false
  hostNetwork: true
  imagePullPolicy: IfNotPresent
  readOnlyRootfs: false
  # If the container already exists, remove it and restart
  force: true
  env:
  - name: http_proxy
    value: "{{ env "http_proxy" }}"
  - name: https_proxy
    value: "{{ env "https_proxy" }}"
  - name: no_proxy
    value: "{{ env "no_proxy" }}"
  - name: HTTP_PROXY
    value: "{{ env "http_proxy" }}"
  - name: HTTPS_PROXY
    value: "{{ env "https_proxy" }}"
  - name: NO_PROXY
    value: "{{ env "no_proxy" }}"
  - name: DOCKER_CONFIG
    value: "/tmp/config"
  bindMounts:
  - mountPath: /var/run/docker.sock
    hostPath: /var/run/docker.sock
  - mountPath: {{ .Workspace }}/esp/esp
    hostPath: {{ .Workspace }}/esp/esp
  - mountPath: /tmp
    hostPath: /tmp
  - mountPath: /tmp/config
{{- if ne (env "DOCKER_CONFIG") "" }}
    hostPath: {{ env "DOCKER_CONFIG" }}
{{- else }}
    hostPath: {{ env "HOME" }}/.docker
{{- end }}
    readOnly: true
  command: ["bash"]
  args:
  - "-c"
  - "set -e;
     apt update && apt install iproute2 -y;
     cd {{ .Workspace }}/esp/esp;
     find . -name \"*.sh\" | xargs chmod +x;
     if [ -f \"conf/.build.lock\" ]; then
        rm -f \"conf/.build.lock\";
     fi;
     for i in $(echo \"esp_mirror_1\";echo \"esp_core_1\");
     do
          if [ $(docker ps -aq --filter name=$i) ] ; then
            docker rm -f $(docker ps -aq --filter name=$i);
          fi;
     done;
     successflag=0;
     if [ -f \"success\" ]; then
         rm -f \"success\";
         successflag=1;
     fi;
     if [ $successflag -eq 0 ]; then
       buildcmd=\"./build.sh\";
     else
       buildcmd=\"./build.sh -s\";
     fi;
     if $buildcmd ; then
        echo \"success\">success;
     else
        if [ -f \"success\" ]; then
         rm -f \"success\";
        fi;
     fi"
